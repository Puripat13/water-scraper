name: Auto Scrape WaterLevel

on:
  schedule:
    # รันทุกวันเวลา 20:00 ไทย (UTC+7) = 13:00 UTC
    - cron: '0 13 * * *'
  workflow_dispatch:

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      PYTHONUNBUFFERED: "1"     # ให้ log Python ไหลทันที
      SCRAPE_BUDGET_SEC: "600"  # งบเวลาการ scrape ~10 นาที (กันเว็บช้า)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Chrome & Chromedriver
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y wget unzip curl jq ca-certificates
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          DRIVER_URL=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json | jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')
          wget -qO chromedriver.zip "$DRIVER_URL"
          unzip -q chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver
          rm -rf chromedriver.zip chromedriver-linux64
          google-chrome --version
          chromedriver --version

      - name: Install Python packages
        run: |
          set -eux
          python -m pip install --upgrade pip
          pip install selenium pandas google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

      - name: Run scraper
        run: |
          set -eux
          python scrap2.py
          test -f waterlevel_report.csv

      - name: Upload artifact (CSV)
        if: always() && hashFiles('waterlevel_report.csv') != ''
        uses: actions/upload-artifact@v4
        with:
          name: waterlevel_report
          path: waterlevel_report.csv
          if-no-files-found: ignore
          retention-days: 7

      # อัปเดตทับไฟล์เดิมใน My Drive ด้วย fileId (หลบปัญหา Service Account ไม่มี quota)
      - name: Upload to Google Drive (update existing file by ID)
        if: success() && hashFiles('waterlevel_report.csv') != ''
        env:
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT }}  # เนื้อหา JSON ทั้งก้อนของ SA
          DRIVE_FILE_ID: ${{ secrets.DRIVE_FILE_ID }}           # fileId ของไฟล์ waterlevel_report.csv ที่คุณสร้างไว้และแชร์ให้ SA เป็น Editor
        run: |
          set -eux
          python - <<'PY'
          import os, json
          from google.oauth2 import service_account
          from googleapiclient.discovery import build
          from googleapiclient.http import MediaFileUpload

          sa_json = os.environ["SERVICE_ACCOUNT_JSON"]
          file_id = os.environ["DRIVE_FILE_ID"]
          csv_path = "waterlevel_report.csv"

          creds = service_account.Credentials.from_service_account_info(
              json.loads(sa_json),
              scopes=["https://www.googleapis.com/auth/drive"]
          )
          drive = build("drive", "v3", credentials=creds)

          media = MediaFileUpload(csv_path, mimetype="text/csv", resumable=False)
          updated = drive.files().update(
              fileId=file_id,
              media_body=media,
              supportsAllDrives=True
          ).execute()
          print(f"✅ Updated file {updated.get('id')} name={updated.get('name')}")
          PY

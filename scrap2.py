import os
import re
import time
import pandas as pd
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive

# ---------------- CONFIG ----------------
URL = "https://nationalthaiwater.onwr.go.th/waterlevel"
CSV_OUT = "waterlevel_report.csv"
DRIVE_FOLDER_ID = "your_drive_folder_id_here"   # <<== ‡πÉ‡∏™‡πà folder id ‡∏Ç‡∏≠‡∏á Google Drive
ENABLE_GOOGLE_DRIVE_UPLOAD = True
# -----------------------------------------

def extract_thai(text: str) -> str:
    """‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏à‡∏≤‡∏Å string"""
    if not isinstance(text, str):
        return ""
    match = re.findall(r"[‡∏Å-‡πô\s]+", text)
    return "".join(match).strip() if match else text

def init_drive():
    gauth = GoogleAuth()
    gauth.LocalWebserverAuth()  # ‡πÄ‡∏õ‡∏¥‡∏î browser ‡πÉ‡∏´‡πâ login
    return GoogleDrive(gauth)

def drive_upload_or_update_csv(local_path, drive_folder_id, target_name):
    drive = init_drive()
    file_list = drive.ListFile({
        "q": f"'{drive_folder_id}' in parents and trashed=false"
    }).GetList()

    # ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô
    file_id = None
    for f in file_list:
        if f["title"] == target_name:
            file_id = f["id"]
            break

    if file_id:
        file = drive.CreateFile({"id": file_id})
        file.SetContentFile(local_path)
        file.Upload()
        return "update", file_id
    else:
        file = drive.CreateFile({
            "title": target_name,
            "parents": [{"id": drive_folder_id}]
        })
        file.SetContentFile(local_path)
        file.Upload()
        return "upload", file["id"]

def scrape():
    print("[INFO] ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤:", URL)
    driver = webdriver.Chrome()
    driver.get(URL)

    # ‡∏£‡∏≠ table ‡πÇ‡∏´‡∏•‡∏î
    WebDriverWait(driver, 15).until(
        EC.presence_of_all_elements_located((By.CSS_SELECTOR, "table tbody tr"))
    )

    rows = driver.find_elements(By.CSS_SELECTOR, "table tbody tr")
    print(f"[INFO] ‡∏û‡∏ö {len(rows)} ‡πÅ‡∏ñ‡∏ß")

    all_data = []
    for row in rows:
        cols = [c.text.strip() for c in row.find_elements(By.TAG_NAME, "td")]
        if cols:
            all_data.append(cols)

    driver.quit()
    return all_data

def save_and_upload(all_data):
    if not all_data:
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")
        return

    # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô
    max_cols = max(len(r) for r in all_data)
    all_data = [r + [""] * (max_cols - len(r)) for r in all_data]

    # header ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡πá‡∏ö
    headers = [
        "Station", "Location", "Time", "Water_Level",
        "Riverbank_Level", "Zero_Ref", "Capacity_Percent",
        "Status", "Collected_Date"
    ]
    if len(headers) < max_cols:
        headers += [f"Extra_{i+1}" for i in range(max_cols - len(headers))]

    file_exists = os.path.exists(CSV_OUT)
    df = pd.DataFrame(all_data, columns=headers)

    # ‚úÖ clean ‡∏Ñ‡πà‡∏≤ Station ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ó‡∏¢
    df["Station"] = df["Station"].apply(extract_thai)

    # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö
    df["Collected_Date"] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # append ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
    df.to_csv(CSV_OUT, mode="a", index=False, encoding="utf-8-sig", header=not file_exists)
    print(f"üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å {len(df)} ‡πÅ‡∏ñ‡∏ß -> {CSV_OUT}")

    if ENABLE_GOOGLE_DRIVE_UPLOAD:
        try:
            action, file_id = drive_upload_or_update_csv(
                local_path=CSV_OUT,
                drive_folder_id=DRIVE_FOLDER_ID,
                target_name=os.path.basename(CSV_OUT)
            )
            print("‚òÅÔ∏è Upload:", "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°" if action == "update" else "‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà", f"(id={file_id})")
        except Exception as e:
            print("‚ö†Ô∏è ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á Google Drive ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", e)

if __name__ == "__main__":
    data = scrape()
    save_and_upload(data)

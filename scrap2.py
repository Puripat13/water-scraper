from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
import time
import pandas as pd
import os
from datetime import datetime

options = Options()
options.binary_location = "/usr/bin/google-chrome"
options.add_argument('--headless')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
options.add_argument('--disable-gpu')
options.add_argument('--window-size=1920,1080')
options.add_argument('--remote-debugging-port=9222')
options.page_load_strategy = "eager"

driver = webdriver.Chrome(options=options)
driver.set_page_load_timeout(60)

try:
    for attempt in range(3):
        try:
            print(f"üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö... (‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà {attempt+1})")
            driver.get('https://nationalthaiwater.onwr.go.th/waterlevel')
            break
        except Exception as e:
            print(f"‚ö†Ô∏è ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà {attempt+1}: {e}")
            if attempt == 2:
                raise
            time.sleep(5)

    # ‚úÖ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö Cookie ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    try:
        consent_button = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, "button.MuiButton-contained"))
        )
        consent_button.click()
        print("‚úÖ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö Cookie ‡πÅ‡∏•‡πâ‡∏ß")
    except Exception:
        print("‚è© ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏° Cookie ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‚Äî ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ")

    # ‚úÖ ‡∏£‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    WebDriverWait(driver, 15).until(
        EC.presence_of_element_located((By.CSS_SELECTOR, ".MuiTable-root tbody tr"))
    )

    all_data = []
    current_date = datetime.today().strftime("%d/%m/%Y")

    while True:
        WebDriverWait(driver, 10).until(
            EC.presence_of_all_elements_located((By.CSS_SELECTOR, ".MuiTable-root tbody tr"))
        )
        table_rows = driver.find_elements(By.CSS_SELECTOR, ".MuiTable-root tbody tr")

        for row in table_rows:
            cols = row.find_elements(By.CSS_SELECTOR, "td")
            data = [col.text.strip() for col in cols]

            if len(data) < 5:
                continue

            if len(data) == 9:
                data[-1] = current_date
            else:
                data.append(current_date)

            all_data.append(data)

        next_button_xpath = "//span[@title='Next Page']/button"
        try:
            next_button = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.XPATH, next_button_xpath))
            )
            if next_button.is_enabled():
                driver.execute_script("arguments[0].click();", next_button)
                print("‚û°Ô∏è ‡∏Å‡∏î Next Page ‡πÅ‡∏•‡πâ‡∏ß...")
                time.sleep(1)
            else:
                print("‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
                break
        except Exception:
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next Page ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡πÑ‡∏î‡πâ")
            break

    file_path = "waterlevel_report.csv"

    if all_data:
        max_columns = max(len(row) for row in all_data)
        all_data = [row + [''] * (max_columns - len(row)) for row in all_data]

        column_names = [
            "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ", "‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á", "‡πÄ‡∏ß‡∏•‡∏≤", "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥",
            "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ï‡∏•‡∏¥‡πà‡∏á", "‡∏Ñ‡πà‡∏≤‡∏®‡∏π‡∏ô‡∏¢‡πå‡πÄ‡∏™‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö", "%‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏‡∏ô‡πâ‡∏≥",
            "‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå", "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
        ]
        if len(column_names) < max_columns:
            column_names += [f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°_{i+1}" for i in range(max_columns - len(column_names))]

        file_exists = os.path.exists(file_path)
        df = pd.DataFrame(all_data, columns=column_names)
        df.to_csv(file_path, mode='a', index=False, encoding="utf-8-sig", header=not file_exists)

        print(f"üìÑ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå {file_path} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‚Äì ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡∏•‡πà‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ GitHub ‡πÑ‡∏°‡πà‡∏û‡∏±‡∏á")
        with open(file_path, "w", encoding="utf-8-sig") as f:
            f.write("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ\n")

except Exception as e:
    print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

finally:
    driver.quit()

